// <auto-generated />
using System;
using Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Authors", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AGID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ALastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BooksBId")
                        .HasColumnType("int");

                    b.HasKey("AId");

                    b.HasIndex("BooksBId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Core.Entities.Books", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomersCId")
                        .HasColumnType("int");

                    b.HasKey("BId");

                    b.HasIndex("CustomersCId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Core.Entities.Customers", b =>
                {
                    b.Property<int>("CId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CCardCode")
                        .HasColumnType("int");

                    b.Property<string>("CFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Core.Entities.Librarians", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LId");

                    b.ToTable("Librarians");
                });

            modelBuilder.Entity("Core.Entities.Authors", b =>
                {
                    b.HasOne("Core.Entities.Books", null)
                        .WithMany("BAuthors")
                        .HasForeignKey("BooksBId");
                });

            modelBuilder.Entity("Core.Entities.Books", b =>
                {
                    b.HasOne("Core.Entities.Customers", null)
                        .WithMany("CBooks")
                        .HasForeignKey("CustomersCId");
                });

            modelBuilder.Entity("Core.Entities.Books", b =>
                {
                    b.Navigation("BAuthors");
                });

            modelBuilder.Entity("Core.Entities.Customers", b =>
                {
                    b.Navigation("CBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
